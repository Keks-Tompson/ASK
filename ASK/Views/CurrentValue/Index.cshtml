
@{
    ViewData["Title"] = "Значения";
} 


@*<head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>*@




@*Сохраняем текущую страницу*@
@using ASK.BLL.Helper.Setting;
@*@{Accaunt.CurrentPage = "CurrentValue";}*@


@using ASK.Controllers;
@using ASK.BLL.Helper


@*<meta http-equiv="refresh" content="5"> Обновляем страницу раз в 10 сек*@

<div class="container-fluid"
     style=" color: #808080;
            padding: 10px;
          /*  background: #fffffC;*/
            border-radius: 0px;
  /*          box-shadow: 0 0 10px;*/
          /*  box-shadow: inset 0 0 15px;*/

           /* border-radius: 10px;
            box-shadow: 0 1px 7px;*/

            line-height: 1;
            margin: 0 0 10px 0;
            padding: 10px;
            font-size: 94%;
            font-family: Times New Roman" , Times, serif; font-size: 20%;">

      @*<h4 class="text-center">График концентраций </h4>*@
      <h4 class="text-center">@ViewData["Title"] системы ASK </h4>
      
     
      
      <div id="chart">
          @*<canvas  id="line" style="  width: 1000px;  height: 130px;"></canvas>*@
          <canvas id="myChart" width="1000"  height="130"></canvas>
      </div>
       

</div>




<div class="container-fluid"
     style=" color: #808080;
         
          /*  background: #fffffC;*/
            border-radius: 0px;
       /*     box-shadow: 0 0 5px;*/
          /*  box-shadow: inset 0 -4 10px;*/
          /*  border-radius: 10px;
            box-shadow: 0 -1px 7px;*/
            line-height: 1;
            margin: 0 0 0 0;
            padding: 10px;
            font-size: 94%;
            font-family: Times New Roman" , Times, serif; font-size: 20%;">



    @*таблица глобальных аварий системы*@
    <div id="tableGlobalAlarm" style="margin:0 0 0 0">
        @Html.Partial("~/Views/States/_GlobalAlarmTable.cshtml")
    </div>


    @*Таблица Концентраций*@
    <div id="currentConcTable" style="margin: 0 0 0 0">
        @Html.Partial("~/Views/CurrentValue/_CurrentConcTable.cshtml")
    </div>


    @*Таблица выбросов*@
    <div id="currentEmisTable" style="margin: 0 0 0 0">
        @Html.Partial("~/Views/CurrentValue/_CurrentEmisTable.cshtml")
    </div>



    @*Аналоговые датчики*@
    <div id="currentAnalogTable" style="margin: 0 0 0 0">
        @Html.Partial("~/Views/CurrentValue/_CurrentAnalogTable.cshtml")
    </div>
</div>






@section scripts{
  
    <script type="text/javascript">
    
        //Вызываем заготовленные представления, рендарим их и обновляем
        
        //Глобальные аварии
        function GlobalAlarmTable()
        {
             $('#tableGlobalAlarm').load('States/_GlobalAlarmTable');
        }

        //Концентрации
        function CurrentConcTable() 
        { 
            $('#currentConcTable').load('CurrentValue/_CurrentConcTable');
        }

        //Выбросы
        function CurrentEmisTable() 
        { 
            $('#currentEmisTable').load('CurrentValue/_CurrentEmisTable');
        }

        //Аналоги + прямые значения
        function CurrentAnalogTable() 
        { 
            $('#currentAnalogTable').load('CurrentValue/_CurrentAnalogTable');
        }

       
      

     
        //setInterval(UpdateChart, 1000)
        //setInterval(Update, 1000)

        //График
        setInterval(UpdateChart, 10000)

        //Глобальные аварии
        setInterval(GlobalAlarmTable, 1000)

        //Концентрации
        setInterval(CurrentConcTable, 1000)
       
        //Выбросы
        setInterval(CurrentEmisTable, 1000)

        //Аналоги + прямые значения
        setInterval(CurrentAnalogTable, 1000)
    </script>
}












<script src="~/lib/package/dist/chart.js"></script>

    <script type="text/javascript">
        
            const ctx = document.getElementById('myChart').getContext('2d');
            const myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [
                       
                         
                ]},

                options: {
                    scales: {
                        y: {
                            beginAtZero: false,
                            title: {
                                display: true,
                                text: 'мг/м³, при н.у.*',
                                fontColor: "green",
                                
                            },
                            grid: {
                                display: false,
                                lineWidth: 0,
                                fontColor: "green",
                            },
                    

                           
                        },
                        percentage: {
                            beginAtZero: false,
                            position: 'right',
                            title: {
                                display: true,
                                text: 'Кислород %',
                                
                            },
                            grid: {
                                display: false,
                                lineWidth: 2,
                            }
                           
                       
                        },
                        x: {
                            grid: {
                                display: false,
                            },
                            ticks: {
                                maxTicksLimit: 10,
                                //autoSkip: false,
                                maxRotation: 0,
                                minRotation: 0
                            }
                        },
                        //y: {
                        //    grid: {
                        //        display: false,
                        //        lineWidth: 0,
                        //    }

                        //},
                        
                       
                     
                      
                        
                       
                        
                    },
                    //animation: {
                    //    duration: 0
                    //},

                     
                }


      
                
            });

            //Онлайн добовляем значения в график
            function pushValueChart(chartCurrent)
            {
                let j = 0;

                //Добовляем время
                myChart.data.labels.push(chartCurrent.dateString);  

                //CO
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.CO_Conc' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.co);
                    j++;
                }
                   
                //CO2
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.CO2_Conc' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.cO2);
                    j++;
                }

                //NO
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.NO_Conc' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.no);
                    j++;
                }
               
                //NO2
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.NO2_Conc' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.nO2);
                    j++;
                }

                //NOx
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.NOx_Conc' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.nOx);
                    j++;
                }
              
                //SO2
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.SO2_Conc' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.sO2);
                    j++;
                }

                //Dust
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.Dust_Conc' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.dust);
                    j++;
                }

                //CH4
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.CH4_Conc' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.cH4);
                    j++;
                }

                //H2S
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.H2S_Conc' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.h2S);
                    j++;
                }

                 //NH3
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.NH3_Conc' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.nH3);
                    j++;
                }

                //Add_Conc_1
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.Add_Conc_1' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.add_Conc_1);
                    j++;
                }

                //Add_Conc_2
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.Add_Conc_2' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.add_Conc_2);
                    j++;
                }

                //Add_Conc_3
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.Add_Conc_3' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.add_Conc_3);
                    j++;
                }

                //Add_Conc_4
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.Add_Conc_4' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.add_Conc_4);
                    j++;
                }

                //Add_Conc_5
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.Add_Conc_5' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.add_Conc_5);
                    j++;
                }

                //O2_Wet
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.O2_Wet' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.o2_Wet);
                    j++;
                }

                //O2_Dry
                if ('@GlobalStaticSettingsASK.VisibilityReportOptions.O2_Dry' == 'table-cell') {
                    myChart.data.datasets[j].data.push(chartCurrent.o2_Dry);
                    j++;
                }

                myChart.update();

                //Проверяеем на переполнение
                while (myChart.data.labels.length > 700) 
                { 
                    for (var i = 0; i < j; i++) 
                    {
                        myChart.data.datasets[i].data.shift();
                    }
                    myChart.data.labels.shift();
                    myChart.update();
                }
                
            }


            function FirsLoadChart()
            {
                
                    let j = 0;
                    let count = @GlobalStaticSettingsASK.ChartList.Count;

                
                    
                    var chartList =  @Json.Serialize(GlobalStaticSettingsASK.ChartList);
              
                    for (var i = 0; i < count; i++) {
                        myChart.data.labels.push(chartList[i].dateString);
                    } 
                    
                    //console.log(chartList);

                    //CO
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.CO_Conc' == 'table-cell') {
                        const newDataset = {
                            label: 'CO',
                            data: [],
                            backgroundColor: ['rgba(191, 6, 6, 0.07)'],
                            borderColor: ['rgba(191, 6, 6, 100)'], //Красный
                            borderWidth: 1,
                            pointRadius: 1,
                            //tension: 0.1,
                            fill: true,
                        };
                        myChart.data.datasets.push(newDataset);

                 
                       
                        for (var i = 0; i < count; i++) 
                        {
                            myChart.data.datasets[j].data.push(chartList[i].co);
                        }
                        j++;
                    }

                    //CO2
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.CO2_Conc' == 'table-cell') {
                        const newDataset = {
                            label: 'CO₂',
                            data: [],
                    backgroundColor: ['rrgba(9, 6, 219, 0.07)'],
                            borderColor: ['rgba(9, 6, 219, 1)'], //Синий
                            borderWidth: 1,
                            pointRadius: 1,
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].cO2);
                        }
                        j++;
                    }

                    //NO
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.NO_Conc' == 'table-cell') {
                        const newDataset = {
                            label: 'NO',
                            data: [],
                    backgroundColor: ['rgba(255, 140, 9, 0.07)'],
                            borderColor: ['rgba(255, 140, 9, 1)'], //DarkOrange
                            borderWidth: 1,
                            pointRadius: 1,
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].no);
                        }
                        j++;
                    }

                    //NO2
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.NO2_Conc' == 'table-cell') {
                        const newDataset = {
                            label: 'NO₂',
                            data: [],
                            backgroundColor: ['rgba(68, 148, 74, 0.07)'],
                            borderColor: ['rgba(68, 148, 74, 1)'],  //Арлекин
                            borderWidth: 1,
                            pointRadius: 1,
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].nO2);
                        }
                        j++;
                    }

                    //NOx
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.NOx_Conc' == 'table-cell') {
                        const newDataset = {
                            label: 'NOx',
                            data: [],
                            backgroundColor: ['rgba(153, 0, 102, 0.07'],
                            borderColor: ['rgba(153, 0, 102, 1)'], //Баклажановый
                            borderWidth: 1,
                            pointRadius: 1,
                            fill: true,
                         
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].nOx);
                        }
                        j++;
                    }

                    //SO2
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.SO2_Conc' == 'table-cell') {
                        const newDataset = {
                            label: 'SO₂',
                            data: [],
                            backgroundColor: ['rgba(26, 38, 150, 0.07)'],
                            borderColor: ['rgba(26, 38, 150, 1)'], //Бледно-пурпурный
                            borderWidth: 1,
                            pointRadius: 1,
                            fill: true,
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].sO2);
                        }
                        j++;
                    }

                    //Dust
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.Dust_Conc' == 'table-cell') {
                        const newDataset = {
                            label: 'Тв. ч.',
                            data: [],
                            backgroundColor: ['rgba(125, 32, 4, 0.07)'],
                            borderColor: ['rgba(125, 32, 4, 1)'], //Бежево-красный
                            borderWidth: 1,
                            pointRadius: 1,
                            fill: true,
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].dust);
                        }
                        j++;
                    }

                    //CH4
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.CH4_Conc' == 'table-cell') {
                        const newDataset = {
                            label: 'CH4',
                            data: [],
                    backgroundColor: ['rgba(128, 70, 27, 0.07)'],
                            borderColor: ['rgba(128, 70, 27, 1)'], //Красно-желто-коричневый
                            borderWidth: 1,
                            pointRadius: 1,
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].cH4);
                        }
                        j++;
                    }

                    //H2S
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.H2S_Conc' == 'table-cell') {
                        const newDataset = {
                            label: 'H₂S',
                            data: [],
                    backgroundColor: ['rgba(174, 132, 139, 0.07)'],
                            borderColor: ['rgba(174, 132, 139, 1)'], //Тусклый пурпурный
                            borderWidth: 1,
                            pointRadius: 1,
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].h2S);
                        }
                        j++;
                    }

                    //NH3
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.NH3_Conc' == 'table-cell') {
                        const newDataset = {
                    label: 'NH₃',
                            data: [],
                    backgroundColor: ['rgba(174, 132, 139, 0.07)'],
                            borderColor: ['rgba(174, 132, 139, 1)'], //Тусклый пурпурный
                            borderWidth: 1,
                            pointRadius: 1,
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].nH3);
                        }
                        j++;
                    }

                    //Add_Conc_1
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.Add_Conc_1' == 'table-cell') {
                        const newDataset = {
                            label: 'Add_Conc_1',
                            data: [],
                            backgroundColor: ['rgba(255, 99, 132, 0.07)'],
                            borderColor: ['rgba(255, 99, 132, 1)'],
                            borderWidth: 1,
                            pointRadius: 1,
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].add_Conc_1);
                        }
                        j++;
                    }

                    //Add_Conc_2
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.Add_Conc_2' == 'table-cell') {
                        const newDataset = {
                            label: 'Add_Conc_2',
                            data: [],
                            backgroundColor: ['rgba(255, 99, 132, 0.01)'],
                            borderColor: ['rgba(255, 99, 132, 1)'],
                            borderWidth: 1,
                            pointRadius: 1,
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].add_Conc_2);
                        }
                        j++;
                    }

                    //Add_Conc_3
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.Add_Conc_3' == 'table-cell') {
                        const newDataset = {
                            label: 'Add_Conc_3',
                            data: [],
                            backgroundColor: ['rgba(255, 99, 132, 0.01)'],
                            borderColor: ['rgba(255, 99, 132, 1)'],
                            borderWidth: 1,
                            pointRadius: 1,
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].add_Conc_3);
                        }
                        j++;
                    }

                    //Add_Conc_4
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.Add_Conc_4' == 'table-cell') {
                        const newDataset = {
                            label: 'Add_Conc_4',
                            data: [],
                            backgroundColor: ['rgba(255, 99, 132, 0.01)'],
                            borderColor: ['rgba(255, 99, 132, 1)'],
                            borderWidth: 1,
                            pointRadius: 1,
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].add_Conc_4);
                        }
                        j++;
                    }

                    //Add_Conc_5
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.Add_Conc_5' == 'table-cell') {
                        const newDataset = {
                            label: 'Add_Conc_5',
                            data: [],
                            backgroundColor: ['rgba(255, 99, 132, 0.01)'],
                            borderColor: ['rgba(255, 99, 132, 1)'],
                            borderWidth: 1,
                            pointRadius: 1,
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].add_Conc_5);
                        }
                        j++;
                    }

                    //O2_Wet
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.O2_Wet' == 'table-cell') {
                        const newDataset = {
                            label: 'О₂ вл.',
                            data: [],
                            backgroundColor: ['rgba(105, 102, 102, 0.01)'],
                            borderColor: ['rgba(105, 102, 102, 1)'],
                            borderWidth: 1,
                            pointRadius: 1,
                            yAxisID: 'percentage'
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].o2_Wet);
                        }
                        j++;
                    }

                    //O2_Dry
                    if ('@GlobalStaticSettingsASK.VisibilityReportOptions.O2_Dry' == 'table-cell') {
                        const newDataset = {
                            label: 'О₂ сух.',
                            data: [],
                            backgroundColor: ['rgba(0, 0, 0, 0.01)'],
                            borderColor: ['rgba(0, 0, 0, 1)'],
                            borderWidth: 1,
                            pointRadius: 1,
                            yAxisID: 'percentage'
                        };
                        myChart.data.datasets.push(newDataset);

                        for (var i = 0; i < count; i++) {
                            myChart.data.datasets[j].data.push(chartList[i].o2_Dry);
                        }
                        j++;
                    }
                    myChart.update();
            }


            function UpdateChart() 
            {
                   $.ajax({
                        url: '@Url.Action("GetCurrentChart")',// указываем URL
                        method: "POST",            // HTTP метод, по умолчанию GET
                        success: function(chartCurrent) {
                            pushValueChart(chartCurrent);
                        
                        }      
                   });
            }
          
           
            
            window.onload = FirsLoadChart();

    </script>
